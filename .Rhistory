swirl()
library (swirl)
swirl()
swirl()
head (flags)
dim (flags)
class (flags)
cls_list <- lapply (flags, class)
cls_list
class (cls_list)
as.character (cls_list)
cls_vect <- sapply (class, flags)
cls_vect <- sapply (flags, class)
class(cls_vect)
exit()
exit
quit
quit()
load("C:/data/salesdata/working.RData")
a
summarise (a, sum(Amount))
library (dplyr)
summarise (a, sum(Amount))
head (a)
summary (a)
str (a)
aggregate (a$Amount, by=list(Category=a$Opportunity.Owner, FUN=sum))
aggregate (a$Amount, by=list(Category=a$Opportunity.Owner, FUN=sum)
)
aggregate (a$Amount, by=list(Category=a$Opportunity.Owner), FUN=sum)
aggregate (a$Amount, by=list(Category=a$Opportunity.Owner), FUN=sum, na.rm=TRUE)
b <- aggregate (a$Amount, by=list(Category=a$Opportunity.Owner), FUN=sum, na.rm=TRUE)
hist (b)
barplot (b)
barplot (b$x)
barplot (b$x, xlab = b$Category)
hist (b$x)
ggplot (b$x)
library (ggplot2)
ggplot (b$x)
qplot (b$x)
data
rm (data)
sales
head (sales)
rm (flags)
rm (aind)
rm(amatrix)
rm (owners)
rm (x)
rm (y)
rm (z)
rm (b)
rm (a)
rm (a.ind)
sales.clean <- subset (sales, sales$Amount!=NA)
help (subset)
sales.clean <- subset (sales, Amount !=NA)
sales.clean
sales.clean <- subset (sales, Amount > 0)
sales.clean
str (sales)
sales.clean <- subset (sales, Amount > 0, select = c(Opportunity.Name, Amount, Opportunity.Owner))
sales.clean
head (sales.clean)
hist (sales.clean$Amount)
aggregate (sales.clean, by=salesperson (Opportunity.Owner))
aggregate (sales.clean, by=salesperson (Opportunity.Owner, FUN=sum))
aggregate (sales.clean, by=salesperson (Opportunity.Owner), FUN=sum)
aggregate (sales.clean, by=Opportunity.Owner, FUN=sum)
aggregate (sales.clean, by=sales.clean$Opportunity.Owner, FUN=sum)
aggregate (sales.clean, by=list (sales.clean$Opportunity.Owner, FUN=sum)
aggregate (sales.clean, by=list (sales.clean$Opportunity.Owner), FUN=sum)
aggregate (sales.clean, by=list (salesperson = sales.clean$Opportunity.Owner), FUN=sum)
aggregate (sales.clean$Amount, by=list (salesperson = sales.clean$Opportunity.Owner), FUN=sum)
sales.by.rep <- aggregate (sales.clean$Amount, by=list (salesperson = sales.clean$Opportunity.Owner), FUN=sum)
hist (sales.by.rep)
hist (sales.by.rep$x)
barplot (sales.by.rep$x)
help (barplot)
qplot (sales.by.rep$x)
ggplot2 (sales.by.rep$x)
library (ggplot2)
library(tidyr)
help (barplot)
ggplot2 (sales.by.rep$x)
qplot (sales.by.rep$x)
barplot (sales.by.rep$x)
barplot (sales.by.rep$x, names.arg = sales.by.rep$salesperson)
sales
str (sales)
head (sales)
qplot (sales)
plot (sales)
str (sales)
barplot (sales$Opportunity.Owner, sales$Amount)
sales.by.rep
barplot (sales.by.rep)
barplot (sales.by.rep$salesperson, sales.by.rep$x)
? barplot
barplot (sales.by.rep$x)
? barplot
library(xls)
library(xlsx)
install.package(xlsx)
install.packages(xlsx)
library(xls)
installed.packages()
install.packages(xlsx)
"xlsx"
install.packages("xlsx")
library(xlsx)
library("xlsx")
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsx)
library(xlsx)
library (dplyr)
setwd("~/")
?strptime
library (swirl)
library (dplyr)
library (tidyr)
swirl()
q
q
s
exit
quit
quit()
swirl()
library (swirl)
swirl()
install_from_swirl ("Exploratory_Data_Analysis")
install_from_swirl ("Exploratory Data Analysis")
swirl()
install_from_swirl ("R Programming
")
library (tm.plugin.mail)
library (tm)
install.packages ("tm")
library (tm.plugin.mail)
library (tm)
setwd("C:/Coursera/Reproducible_Research/Asst1")
url <- "www.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip")
url <- "http://www.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip")
download.file (url, "./activity.zip")
url <- "http://www.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip")
url <- "http://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip")
url <- "https://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip")
download.file (url, "./activity.zip", method="curl")
url <- "http://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip", method="curl")
url <- "http://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
library (RCurl)
url <- "https://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip", method="curl")
download.file (url, "./activity.zip")
?download.file
download.file (url, "./activity.zip", method="wininet")
url <- "http://raw.github.com/kdconway/RepData_PeerAssessment1/activity.zip"
download.file (url, "./activity.zip", method="wininet")
url <- "https://github.com/kdconway/RepData_PeerAssessment1/raw/master/activity.zip"
download.file (url, "./activity.zip")
unzip ("./activity.zip", exdir = "./")
download.file (url, "./activity.zip")
unzip ("./activity.zip", exdir = "./")
unzip ("./activity.zip")
act <- read.csv ("./activity.csv")
str (act)
head (act, 20)
table (act$interval)
head (act, 20)
table (act$date)
table (act$steps)
table (is.na(act$steps))
d <- act$date
class (d)
e <- as.date (d)
e <- as.POSIXlt (d)
class (e)
head (e)
source('C:/Coursera/Reproducible_Research/test.R')
getwd()
getwd()
setwd("C:/Coursera/Reproducible_Research/RepData_PeerAssessment1")
getwd()
?ITime
as.ITime ("10:45")
as.ITime (30)
as.ITime ("30")
as.ITime ("0000")
as.ITime ("0001")
as.ITime ("00:01")
as.ITime (":05")
as.ITime ("00:05")
as.ITime ("00:00"+ 5)
as.ITime ("00:00"+) + 5
t <- ITime ("00:00")
t <- as.ITime ("00:00")
t
class (t)
t + 5
t + 30
t + (5*60)
t + (5*60*60)
d <- as.IDate ("March 30, 1973")
d <- as.IDate ("1973-03-30")
d
year (d)
month (d)
wday (d)
day (d)
yday(d)
mday (d)
week (d)
quarter (d)
year (d)
dir ()
rm (act)
act <- fread ("./data/activity.csv")
act
class (act$steps)
class (act$date)
class (act$interval)
table (act$interval)
t <- as.ITime ("2355")
t
t <- as.ITime ("23:55")
t
t <- as.ITime ("100")
t
t <- as.ITime ("1:00")
t
?strptime
t1 <- as.POSIXct("1:00")
t1
t1 <- as.POSIXct("100", format = "%H%M")
t1
library (stringr)
? stringr
?str_pad
str_pad ("kevin", 30, side="left", pad="0")
str_pad ("gfnfjgfjgfjfj", 30, side="left", pad="0")
str_pad ("gfnfjgfjgfjfj", 30, side="left", pad="0")act
act
?strsplit
act [, interval := str_pad (interval, 4 side="left", pad="0")]
act [, interval := str_pad (act$interval, 4 side="left", pad="0")]
act [, interval = str_pad (interval, 4 side="left", pad="0")]
act [, interval := str_pad (interval, 4, side="left", pad="0")]
act
act[, time := gsub ("^([0-2]{2})([0-9]+)$', '\\1:\2', interval)]
)
]
]
)
)
]
[]
?gsub
act[, time := gsub ('^([0-2]{2})([0-9]+)$', '\\1:\2', interval)]
act
act[, time := gsub ('^([0-2]{2})([0-9]{2})$', '\\1:\2', interval)]
act
act[, time := gsub ('^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval)]
act
act[, time := as.ITime (gsub ("^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval))]
]
)
act[, time := gsub ("^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval)]
)
]
]
]
act [, time := gsub ("^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval)]
act [, time := gsub ("^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval)]
act [, time := NULL]
act
act [, time := as.ITime (gsub ('^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval))]
act
act [, time := gsub ('^([0-2]{2})([0-9]{2})$', '\\1:\\2', interval)]
act
class (act$time)
act [, time := ITime (time)]
library (data.table)
act [, time := ITime (time)]
act [, time := as.ITime (time)]
act
class (act$time)
act [, time := gsub ('^([0-9]{2})([0-9]{2})$', '\\1:\\2', interval)]
act
act [, time := as.ITime (time)]
act
act [, time := as.ITime (gsub ('^([0-9]{2})([0-9]{2})$', '\\1:\\2', interval))]
act
class (act$time)
with (act, plot (steps ~ time))
with (act, plot (log10(steps) ~ time))
with (act, plot (log10(steps) ~ date))
act [, date := as.IDate (date)]
act
act [, dt := IDateTime (date, time)]
act
act [, dt := IDateTime (c(date, time))]
act
act [, dt := IDateTime (date + time)]
act
help (IDateTime)
d = act[1, date]
d
t <- act [1, time]
t
class (d)
class (t)
d <- character (d)
d
d = act[1, date]
d <- as.character (d)
d
class (d)
t <- as.character (t)
t
class (t)
dt <- paste (d, t)
dt
p.dt <- as.POSIXct(dt)
p.dt
class (dt)
? as.POSIXct
? POSIX
"POSIXct-class"
? time
? date
? as.POSIXlt
p.dt <- as.POSIXct (dt, format = "%Y-%m-%d %H:%M:%S")
p.dt
class (p.dt)
dt
class (dt)
p.dt <- strptime (dt, format="%Y-%m-%d %H:%M:%S")
p.dt
class (p.dt)
d
t
class (d)
class (t)
dt <- paste (d, t)
d <- "2012-10-01"
d
dt <- paste (d,t)
dt
p.dt <- as.POSIXct (dt, format = "%Y-%m-%d %H:%M:%S")
p.dt
dt
t <- "01:01:01"
t
dt <- paste (d, t)
dt
p.dt <- as.POSIXct (dt, format = "%Y-%m-%d %H:%M:%S")
p.dt
as.POSIXct ("2012-10-01 00:00:05")
as.POSIXct ("2012-10-01 00:00:00")
as.POSIXct ("2012-10-01 24:00:00")
act
act [, dt2 := as.POSIXct (date, time)]
act
class (act$dt2)
with (act, plot (steps ~ dt2))
dt <- act[2, dt2]
dt
class (dt)
wday (dt)
day(dt)_
day(dt)
with (act, plot (steps ~ wday(dt2))
)
time (dt)
as.time (dt)
? date
? as.POSIXct
act
class (act$time)
with (act, plot (steps ~ time))
class (act$time)
act$time <- as.character (act$time)
act$time
class (act$time)
act
act [, dt3 := as.POSIXct (date, time)]
act [, dt3 := as.POSIXct (date, time, tz="UTC")]
act [, time := as.ITime (time)]
act [, dt3 := as.POSIXct (date, time)]
act$dt3
? as.ITime
class (act$date)
test <- act [, sum(steps), by=date]
test
p <- ggplot (V1, data=test)
library (ggplot2)
p <- ggplot (V1, data=test)
test
p <- ggplot (V1, data=test)
p <- ggplot (data=test, aes (x=V1))
q <- p + geom_hist()
q <- p + geom_bar()
print (q)
qplot (data=test, x=V1)
qplot (data=test, x=V1, binwidth = 100)
qplot (data=test, x=V1, binwidth = 500)
qplot (data=test, x=V1, binwidth = 1000)
qplot (data=test, x=V1, binwidth = 2000)
?qplot
test [, mean(V1)]
test
test [, mean(V1, na.rm=TRUE)]
summary (test$V1)
test [, median(V1)]
test [, median(V1, na.rm=TRUE)]
?mean
?weekdays
?scipen
?round
??scipen
?options
test
act
act [, dt := NULL]
act
act$time
class (act$time)
time <- act [, mean(steps), by=time]
time
tbale (time$V1)
table (time$V1)
time$V1
act
table (act$steps)
act
summary (act$steps)
time <- act [, mean(steps), by=time]
time
time$V1
time <- act [, mean(steps, na.rm=TRUE), by=time]
time
time <- act [steps != NA, mean(steps), by=time]
time
act
time <- act [steps != "NA", mean(steps), by=time]
time
time <- act [steps != "NA", avg := mean(steps), by=time]
time
time
act
time
time <- act [steps != "NA", mean(steps), by=time]
time
colNames (time, c ("time", "avg.steps"))
colnames(time, c("time", "avg.steps"))
?colnames
colnames (time)
setnames (time, "time", "avg.steps")
time
setnames (time, c("avg.steps", "V1"), c("time", "avg.steps"))
time
daily <- act [steps != "NA", mean(steps), by=time]
daily
class (daily$time)
t <- daily$time
t
class (t)
t1 <- as.POSIXct (t)
t1
class (t1)
daily
with (daily, plot (V1 ~ time))
with (daily, plot (V1 ~ as.POSIXct(time))
)
class (daily$time)
daily$time <- as.POSIXct (daily$time)
with (daily, plot (V1 ~ time))
daily [, max(steps)]
daily
daily [, max(V1)]
daily [max(V1), time]
class (daily$time)
daily [, time := as.POSIXct (time, format = "%H:%M:%S")]
daily
?strftime
act [steps=="NA", .N]
act [steps=="NA", N]
act [steps=="NA", .N]
act
act [steps="NA", .N]
act [steps!="NA", .N]
act [steps=="NA", .N]
act [, .N]
act [steps == NA, .N]
act [is.na(steps), .N]
act2 <- act [is.na(steps), steps := mean(steps), by=time]
act2 <- act
act
act2 <- act [is.na(steps), steps := mean(steps), by=time]
act2[is.na(steps), steps := mean(steps), by=time]
act2 [is.na(steps)] [, steps := mean(steps), by=time]
